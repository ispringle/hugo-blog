<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Blogs on ian.ist</title><link>http://ianist.neocities.org/blog/</link><description>Recent content in Blogs on ian.ist</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Nov 2022 16:40:00 -0500</lastBuildDate><atom:link href="http://ianist.neocities.org/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Some Changes</title><link>http://ianist.neocities.org/blog/some-changes/</link><pubDate>Mon, 21 Nov 2022 16:40:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/some-changes/</guid><description>Just wanted to point out that I have removed the &amp;rsquo;loci&amp;rsquo; and the &amp;lsquo;projects&amp;rsquo; links from the navbar. I am likely going to also remove configs eventually since those are all literate configs and I am no longer using emacs. I have that up still for the time being because it has valuable content. The loci and projects sections had little to no content of value, so I have removed them.</description></item><item><title>Moving The Blog</title><link>http://ianist.neocities.org/blog/moving-the-blog/</link><pubDate>Wed, 16 Nov 2022 00:12:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/moving-the-blog/</guid><description>I did it. This morning I mentioned that I was going to be leaving Emacs land and moving to VS Code and this afternoon I moved the blog over. It was very easy actually. I already had a test Hugo blog running on Neocities.org, so all I had to do was port the few new posts since that effort, and then update my DNS to point to the Neocities site. I suspect that I will eventually be moving from Hugo to Astro, like I had previously mentioned, however this is a great stop-gap and will let me have a blog that I can keep updated without having to do much/any work to migrate.</description></item><item><title>Fare Thee Well, Emacs</title><link>http://ianist.neocities.org/blog/fare-thee-well-emacs/</link><pubDate>Wed, 16 Nov 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/fare-thee-well-emacs/</guid><description>At least for a while, my time with Emacs has once again come to an end. It is not exactly the fault of Emacs, but the tooling at work is new and niche and there is no or nearly no userbase within the Emacs community that uses this tooling, which makes for a distinct lack of support in the Emacs ecosystem. As a result, I am going to take a Sabbatical from the world of Emacs and try something completely new to me, VS Code.</description></item><item><title>I Am Back</title><link>http://ianist.neocities.org/blog/i-am-back/</link><pubDate>Mon, 24 Oct 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/i-am-back/</guid><description>Hey! I&amp;rsquo;m back after a two-ish week paternity leave. We had a baby girl on October 6th and I&amp;rsquo;ve been more or less offline since then. Our baby girl is named Penelope. Mother and baby are both doing just fine, and we are working on adjusting to the change. The most notable adjustment is that things take longer. After three children, number four really is not that much more difficult.</description></item><item><title>Astro Was A Failure To Launch</title><link>http://ianist.neocities.org/blog/astro-was-a-failure-to-launch/</link><pubDate>Thu, 06 Oct 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/astro-was-a-failure-to-launch/</guid><description>I have spent the last couple days hacking away at AstroJS. I think it might provide what I want in a framework. It produces static sites with no, to minimal client-side JS, and it is itself a JS framework. SSG is important mostly at a philosophical level for me, Lightscores aside, the overhead of SSR or CSR for a blog is minimal and likely unnoticeable, but I enjoy the idea of SSG.</description></item><item><title>A Few Days With ox-hugo</title><link>http://ianist.neocities.org/blog/a-few-days-with-ox-hugo/</link><pubDate>Tue, 04 Oct 2022 05:28:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/a-few-days-with-ox-hugo/</guid><description>I&amp;rsquo;ve been playing with ox-hugo for a few days now. I do like a lot about it. One thing I like a lot is how it is focused on getting out of the way and just turning org files into well crafted HTML. I am rather unpleased with ox-hugo&amp;rsquo;s path for deployment, it&amp;rsquo;s a bit more manual than I like. I tried to automate it but hit a roadblock. I&amp;rsquo;ll definitely be trying this again later because the current solution isn&amp;rsquo;t acceptable to me.</description></item><item><title>Giving ox-hugo Another Try</title><link>http://ianist.neocities.org/blog/giving-ox-hugo-another-try/</link><pubDate>Tue, 04 Oct 2022 05:28:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/giving-ox-hugo-another-try/</guid><description>I am giving ox-hugo another try. A few reasons, primarily, my NextJS efforts started feeling like holding water in my hands, and second ox-hugo is just closer to the metal, so to speak. The site will probably change apperance for a while but I hope to get it back to a close approximation of what I have style-wise currently. This post will likely be shown on the NextJS version of the blog for a while and then once I&amp;rsquo;ve gotten a deployment process setup I&amp;rsquo;ll switch to the Hugo site.</description></item><item><title>Perhaps A New Path For Sylvan</title><link>http://ianist.neocities.org/blog/perhaps-a-new-path-for-sylvan/</link><pubDate>Mon, 26 Sep 2022 17:14:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/perhaps-a-new-path-for-sylvan/</guid><description>To me the idea of &amp;ldquo;sylvan&amp;rdquo; is a tool meant to easily create beautiful sites with org-mode, while remaining unintrusive. For that reason, I am exploring some alternative, non-NextJS options for Sylvan. There&amp;rsquo;s a few reasons for this:
As I&amp;rsquo;ve expressed before, I&amp;rsquo;m not 100% thrilled with Sylvan as it exists today As I&amp;rsquo;ve expressed before, I&amp;rsquo;d love for a more emacs-centric tooling, but I dislike the constraints of ox-html I am taking a new job on October 10th and my primary frontend framework will be lit.</description></item><item><title>Baby, Incoming?</title><link>http://ianist.neocities.org/blog/baby-incoming/</link><pubDate>Wed, 21 Sep 2022 06:23:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/baby-incoming/</guid><description>We may or may not have a new baby in the next few days. My wife has been laboring since yesterday. The midwife and I think it won&amp;rsquo;t be much longer now. What makes this awkward is I just accepted a new job and while the new job is going to throw paternity time at me from day one, I have to get to day one first, which isn&amp;rsquo;t until October 3rd.</description></item><item><title>Hard At Work</title><link>http://ianist.neocities.org/blog/hard-at-work/</link><pubDate>Thu, 15 Sep 2022 16:47:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/hard-at-work/</guid><description>You might not know it since we&amp;rsquo;re going on almost a week since a content update to the site, but I have been doing some refactoring work on the sylvan project. I&amp;rsquo;ve cut build times in half by updating the build-api. An added benefit of this rebuild is that I can now properly use rehype plugins (retext too!). Currently I&amp;rsquo;ve got rehype-raw working which means I can add begin-export html blocks to my org files and they will populate on the site as actual HTML (and I think react, but I have not tried this yet so I do not know for sure).</description></item><item><title>Nice New Look</title><link>http://ianist.neocities.org/blog/nice-new-look/</link><pubDate>Sat, 10 Sep 2022 11:58:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/nice-new-look/</guid><description>You&amp;rsquo;ll notice that my site has some nice new styles going on. I was playing with a fork of Sylvan that used Chakra-UI, however I have since trashed that because I couldn&amp;rsquo;t get the layout I wanted (after giving up on the route I then updated how my site is laid out and this ended up meaning that Chakra or Mantine or really any other components library would have actually worked&amp;hellip;).</description></item><item><title>A Better Template Func</title><link>http://ianist.neocities.org/blog/a-better-template-func/</link><pubDate>Thu, 08 Sep 2022 05:56:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/a-better-template-func/</guid><description>In a previous post I talked about a function I wrote that allowed me to stub out a few of the properties required for working with Sylvan. I have since updated that function a little. It&amp;rsquo;s still not ideal and I have one or two issues with it still, but I wanted to share the updated function nonetheless. As a sidenote, unless I outright delete this function for some reason, it shall always be visible in it&amp;rsquo;s most up to date from in my literate config.</description></item><item><title>Emacs From Scratch, Part 0</title><link>http://ianist.neocities.org/blog/emacs-from-scratch-part-0/</link><pubDate>Wed, 07 Sep 2022 16:29:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/emacs-from-scratch-part-0/</guid><description>My experience with Emacs can be split into two parts:
Emacs with doom Realizing Doom didn&amp;rsquo;t load and quitting Emacs as quickly as possible and trying to figure out how to get back into Doom I have been experiencing some annoyances with emacs lately. It hangs or lags or chokes on large files (over 1000 lines) and it crashes sometimes. Partly out of a desire to strip back and get a leaner emacs, and partly out of a desire to really &amp;ldquo;try&amp;rdquo; emacs without the help of someone else&amp;rsquo;s config, I am going to attempt to build my own emacs from scratch.</description></item><item><title>Maybe Easy Is Better</title><link>http://ianist.neocities.org/blog/maybe-easy-is-better/</link><pubDate>Tue, 06 Sep 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/maybe-easy-is-better/</guid><description>I have two major shortcomings that I am working to resolve with orgmode&amp;rsquo;s default org-publish:
attachments do not work out of the gate it doesn&amp;rsquo;t get me closer to the ox-huge workflow of one blog.org file I have looked at some other potential options for my blog. NextJS is fine, I like it even, but I worked on refactoring to Chakra-UI and it&amp;rsquo;s annoying that it still isn&amp;rsquo;t really working right.</description></item><item><title>What's Next For Sylvan</title><link>http://ianist.neocities.org/blog/whats-next-for-sylvan/</link><pubDate>Fri, 02 Sep 2022 16:51:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/whats-next-for-sylvan/</guid><description>For those who do not know Sylvan is my NextJS app that org files and creates webpages. It&amp;rsquo;s not a static-site generator technically since it&amp;rsquo;s doing server-side rendering, but I currently do not have it setup so that the org files are updated on the fly either (ie content only gets updated when a deployment runs). Fixing this is on the roadmap, but first I want to get it setup to be configurable so that I can, for example, change the header, the favicon, the overall title, etc.</description></item><item><title>Why I Migrated From K8s</title><link>http://ianist.neocities.org/blog/why-i-migrated-from-k8s/</link><pubDate>Fri, 02 Sep 2022 13:34:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/why-i-migrated-from-k8s/</guid><description>At the time of this writing, my blog is still hosted with Vercel, however I think I will eventually move it to my VM. However, all the other sites and services I host have been migrated to my new VM (at the time of writing, only Nextcloud hasn&amp;rsquo;t been migrated, but it never made it into Kubernetes anyway). Why the switch? Well, I started using kubernetes after I took a job as a consultant doing SRE work.</description></item><item><title>Setting Up A Firewall</title><link>http://ianist.neocities.org/blog/setting-up-a-firewall/</link><pubDate>Fri, 02 Sep 2022 09:50:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/setting-up-a-firewall/</guid><description>Introduction I am migrating from Kubernetes to a VM. The tl;dr on the VM is that it&amp;rsquo;s an Ubuntu machine, serving my various sites and services with Caddy. The sites and services are all running in docker containers and the Caddy server proxies traffic to the specific containers. I am migrating from Kubernetes because it is expensive to run a cluster and it&amp;rsquo;s far more than I need. I had migrated to Kubernetes when I was doing consulting work as an SRE however, I am now very focused on being a developer, and while I don&amp;rsquo;t wish to lose my SRE skillset, I also cannot justify the cost, maintenance, or cognitive load required to keep that cluster up and working, thus a VM.</description></item><item><title>Still Undecided</title><link>http://ianist.neocities.org/blog/still-undecided/</link><pubDate>Sat, 27 Aug 2022 19:54:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/still-undecided/</guid><description>Me, the jury of one, is still out on whether I will continue with the Uniorg+NextJS or attempt to find a different solution. The current trouble? Parsing of Orgmode verse blocks results in a &amp;lt;pre&amp;gt; , which is not at all what I want. I could make most of the verse blocks, most of the time, look good. But what if it contains superscript text? In Org that looks like a ^{I am superscript} or a ^superscript.</description></item><item><title>Commonplacing</title><link>http://ianist.neocities.org/blog/commonplacing/</link><pubDate>Sat, 27 Aug 2022 18:09:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/commonplacing/</guid><description>So, I&amp;rsquo;m thinking about the concept of digital gardens, the ideas behind Zettelkasten, and my own interpretation of that I am currently calling &amp;ldquo;Grok&amp;rdquo;. I was reading on another digital garden about this historic concept called &amp;ldquo;commonplace books&amp;rdquo; or &amp;ldquo;commonplaces&amp;rdquo;. The idea goes back further to this Latin term called locus communis, and it goes back even further to the Greek idea of &amp;ldquo;τόπος κοινός&amp;rdquo; (topos koinos) or &amp;ldquo;literary topos&amp;rdquo;. John Locke even wrote a book on this idea called A New Method of Making Common-Place-Books.</description></item><item><title>Publishing with org-publish</title><link>http://ianist.neocities.org/blog/publishing-with-org-publish/</link><pubDate>Fri, 26 Aug 2022 14:43:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/publishing-with-org-publish/</guid><description>While looking further into ox-hugo I decided to also look further into just bog-standard org-publish. I already had some elisp to build out my org files to html and I decided to break that elisp down into a literate program that is then compiled into a build directory which contains all the shell, elisp, CSS, and Dockerfiles I need to build and deploy a website built with org-publish. I am not currently using this to deploy this or any other website, but I was pretty happy with the result and wanted to share.</description></item><item><title>New Puppy!</title><link>http://ianist.neocities.org/blog/new-puppy/</link><pubDate>Tue, 23 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/new-puppy/</guid><description>I got a new puppy today! I still don&amp;rsquo;t have a name for him. He&amp;rsquo;s a Catahoula Leopard dog. That tail is gonna take some getting used to, it&amp;rsquo;s not docked, that&amp;rsquo;s just what they call a &amp;ldquo;bob&amp;rdquo; tail, it&amp;rsquo;s natural and common on this breed.</description></item><item><title>Playing With Hugo</title><link>http://ianist.neocities.org/blog/playing-with-hugo/</link><pubDate>Tue, 23 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/playing-with-hugo/</guid><description>So I&amp;rsquo;ve spent some time playing with Hugo and more specifically, I&amp;rsquo;ve been playing with ox-hugo which is a way of exporting Org files to Markdown that plays nicely with Hugo. I&amp;rsquo;m not happy with my current blog setup. I like the Sylvan site and NextJS, but blogging with it is cumbersome, in part because of the Org parser I am using. In JavaScript land there are two Org parsers, one is mostly abondonware and the other is called Uniorg.</description></item><item><title>The Time Is Wrong!</title><link>http://ianist.neocities.org/blog/the-time-is-wrong/</link><pubDate>Thu, 18 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/the-time-is-wrong/</guid><description>Well&amp;hellip; it has happened again. The last time it was because of the YAML format interpretting timestamps as UTC unless explicitly set otherwise. And I fixed that issue&amp;hellip; but that won&amp;rsquo;t help this, since I gave up on using Contentlayer like two days later 😭.
I&amp;rsquo;m not sure the reason for the problem this time. I even updated the timezone for the GH action so that it would be set to CST.</description></item><item><title>Vercel Woes</title><link>http://ianist.neocities.org/blog/vercel-woes/</link><pubDate>Wed, 17 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/vercel-woes/</guid><description>Vercel is the company behind Nextjs and also a hosting platform that works with static site generates (Huga, Jekyll, Zola, etc.) and server side generators (Nextjs). I&amp;rsquo;ve been using them to host my new blog since it&amp;rsquo;s inception because they promise &amp;ndash; and mostly make good on the promise &amp;ndash; easy deployments. Well&amp;hellip; ian.ist is a little different because it&amp;rsquo;s two different repos. There is the Sylvan repo which contains the Nextjs code that parses org files and displays the content and there is my private org repo which holds the content.</description></item><item><title>Indie Web</title><link>http://ianist.neocities.org/blog/indie-web/</link><pubDate>Tue, 09 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/indie-web/</guid><description>The Indie Web is basically an attempt at providing standards and tooling to create websites that are federated and connected to one another. Some of the things they have include IndieAuth, Webmentions, h-cards, h-entries, and syndication with POSSE. Almost all of these things are just standards that you can implement on your site, like the h-* stuff, and allow for other sites and tools to interact with your own website. Some neat things that this allows for are mostly automatic &amp;ldquo;webmentions&amp;rdquo;, which are anything from comments on a post, to response posts, and &amp;ldquo;shares&amp;rdquo;.</description></item><item><title>JavaScript Template Strings and Emacs Are Not Friends</title><link>http://ianist.neocities.org/blog/javascript-template-strings-and-emacs-are-not-friends/</link><pubDate>Tue, 09 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/javascript-template-strings-and-emacs-are-not-friends/</guid><description>At the new job (Jack Henry) we&amp;rsquo;re using a JavaScript framework called Lit. It&amp;rsquo;s a Google project that makes working with the native Web Component API a bit less painful. Because Lit is merely some syntactic sugar around the native vanilla JS API for working with WCs it doesn&amp;rsquo;t have fancy stuff like JSX (as oppossed to the other WC library, Stencil, which does). Instead Lit uses the native JavaScript template strings ie:</description></item><item><title>Literate Dots Part 1 ZSH</title><link>http://ianist.neocities.org/blog/literate-dots-part-1/</link><pubDate>Tue, 09 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/literate-dots-part-1/</guid><description>I had mentioned tangling all the things yesterday, and I&amp;rsquo;ve gone ahead and gotten a literate Zsh config up and running this morning. I&amp;rsquo;ve also created a new repo for it here.
Setup-wise, I went through a few different configurations to keep this DRY and eventually settled on setting global tangle settings in the properties drawer and then specifying each block&amp;rsquo;s output file in the source block. I might update this eventually, but I couldn&amp;rsquo;t convince babel to run any other way.</description></item><item><title>Keeping Some Content Private A Stop-Gap</title><link>http://ianist.neocities.org/blog/keeping-some-content-private/</link><pubDate>Mon, 08 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/keeping-some-content-private/</guid><description>So I&amp;rsquo;d like to keep some content in my org repo private &amp;ndash; things like todos, journals, and unfinished posts. Ultimately I&amp;rsquo;d like to put this sort of stuff behind a login, but as a stop-gap I&amp;rsquo;m thinking to go the brute-force way and rm it. My stop-gap is to delete any file containing the line :PRIVATE: t. I&amp;rsquo;m going with the property route so that in the future I can update my solution to be a bit more elegant without having to do any additional work to alter my files.</description></item><item><title>My Dirty Hack to Template Files</title><link>http://ianist.neocities.org/blog/my-dirt-hack-to-template-files/</link><pubDate>Mon, 08 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/my-dirt-hack-to-template-files/</guid><description>It&amp;rsquo;s actually kind of hard to use a template to create a new file. Apparently this is part of Doom, but I couldn&amp;rsquo;t figure out how to get teh file-templates to work in Doom. My dirty hack to get this working was to create a function that calls a new buffer, inserts some heading info into that new buffer, and then tells the buffer use the major mode of org-mode.</description></item><item><title>Tangle All The Things</title><link>http://ianist.neocities.org/blog/tangle-all-the-things/</link><pubDate>Mon, 08 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/tangle-all-the-things/</guid><description>So I had this idea last night, and like with all great ideas I googled it see if anyone else had come up with it first. To my dismay, I was far from the first person to have this awesome idea. The idea? Literate dotfiles!
Imagine how great it&amp;rsquo;d be! You write a single file, let&amp;rsquo;s call it dotfiles.org and then inside of that you write all your dotfiles and document them.</description></item><item><title>Deployment. How Do?</title><link>http://ianist.neocities.org/blog/deployment-how-do/</link><pubDate>Sun, 07 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/deployment-how-do/</guid><description>Introduction Currently, ian.ist is hosted with Vercel. I am using Vercel and not my Bitranchlabs Infra because it was easier, and I am also not sure if I am going to keep my Kubernetes stuff running &amp;ndash; it&amp;rsquo;s $50+ / month for something I really don&amp;rsquo;t need. Vercel is great, I have no real reason to leave, except that my website&amp;rsquo;s content is in my private org repo, while the rest of the site is in the Sylvan repo, and the org content must be mounted into the Sylvan repo in order to build this site.</description></item><item><title>Migrating To Org Mode</title><link>http://ianist.neocities.org/blog/migrating-to-org-mode/</link><pubDate>Wed, 03 Aug 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/migrating-to-org-mode/</guid><description>I am back to (doom)emacs+org-mode, again&amp;hellip; again&amp;hellip; again&amp;hellip;
Why? I like it!
I tried to use ox-hugo. And it seemed nice, but way to much extra. Org mode can compile org files to html, why convert the files to markdown first? Just didn&amp;rsquo;t make sense. I think I shall try sticking with stock org-mode for publishing.
I ended up finding a wonderful package called Uniorg, which is a parser that takes Org files and generates Unified ASTs that can then be manipulated by tools like Rehype to modified and spit-out HTML.</description></item><item><title>A WIP</title><link>http://ianist.neocities.org/blog/a-wip/</link><pubDate>Fri, 29 Jul 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/a-wip/</guid><description>As you can see this site is a serious WIP. But it&amp;rsquo;s coming along, nonetheless &amp;ndash; and dare I say it, is actually useable. Few tasks I&amp;rsquo;d like to get done next include:
TODO RSS feed(s) DONE Start rudimentary display of `/grok` &amp;ndash; aka the knowledge base TODO Programmigcally display projects under `/project` based on GitHub and GitLab starred projects TODO Add a section for my JS and love.js games so they can all be played/explored from this site TODO Better logo/branding/header thing and a favicon that isn&amp;rsquo;t the NextJS default TODO Book review index as a gallery of book covers TODO Typography improvements including a better font, better colors, and automatically swap quotes and dashes for the appropriate curly quote or emdash, etc.</description></item><item><title>The Case of the Wrong Date</title><link>http://ianist.neocities.org/blog/the-case-of-the-wrong-date/</link><pubDate>Fri, 29 Jul 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/the-case-of-the-wrong-date/</guid><description>I noticed a funny thing happening, the dates for my posts were wrong. The source of the post would contain the correct value in the frontmatter, for example the date of my first post was 2022-07-25 but when that was rendered by NextJS and spit out on the website it was coming in a whole day /earlier_, ie 2022-07-24. At first I thought the culprit was the date library, date-fns, so I dropped into a node shell to see if that was the case&amp;hellip;</description></item><item><title>Code Example</title><link>http://ianist.neocities.org/blog/code-example/</link><pubDate>Thu, 28 Jul 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/code-example/</guid><description>This is just an example of some code blocks for testing rehype prism.
This is the time parser I use for Planwarrior. As you can see on lines 1-3 I have a time_str function which takes a string representation of time (4:03) and then determines how many minutes that is since midnight:
def time_str(s): h, m = [int(x) for x in s.split(&amp;#39;:&amp;#39;)] return h * 60 + m def plan(plan): return { time_str((y := x.</description></item><item><title>ContentLayer Is Cool</title><link>http://ianist.neocities.org/blog/contentlayer-is-cool/</link><pubDate>Wed, 27 Jul 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/contentlayer-is-cool/</guid><description>I&amp;rsquo;ve been using contentlayer with this new NextJS blog/digital-garden/website/thing and so far I&amp;rsquo;m really liking it. Content Layer is basically a way of reading MD and MDX files and then turning them into JSON that JavaScript can then process. In addition to reading markdown into data, Content Layer also does a few other things that other libraries aren&amp;rsquo;t offering. With Content Layer I can not only turn MD into data, but it also creates TypeScript typing for that data and allows you to extrapolate and generate metadata on the fly to go with that JSONified markdown.</description></item><item><title>Hello World</title><link>http://ianist.neocities.org/blog/hello-world/</link><pubDate>Mon, 25 Jul 2022 00:00:00 -0500</pubDate><guid>http://ianist.neocities.org/blog/hello-world/</guid><description>Hello! That&amp;rsquo;s right, it&amp;rsquo;s yet another blog from me. Another blog that, let&amp;rsquo;s face it, I won&amp;rsquo;t probably use very much, and is really just an excuse to doing something creative and learning a bit at the same time. Nonethesless, I am going to create YAB and promise to update it.
My main motivations are:
Play with NextJS Create a &amp;ldquo;digital garden&amp;rdquo; for my notes In doing the above, hopefully eventually settle on platforms to use for day planning, notetaking, and writing Unlike in prior blogs of mine (0x44.</description></item></channel></rss>